{
  "hash": "e171a667a26cbea941f5e2341a248fce",
  "result": {
    "markdown": "---\ntitle: Internal functions 2\nformat:\n  html:\n    code-fold: false\nexecute:\n  cache: true\n  keep-ipynb: true\n---\n\n## Introduction\n\nThe only function [exported](https://docs.julialang.org/en/v1/manual/modules/#Export-lists) by [Findr.jl][1] is the [`findr`](https://tmichoel.github.io/Findr.jl/dev/testLLR/) function itself. Nevertheless, many of the internal functions may be useful when digging deeper in the results for specific genes. The [package documentation][6] contains detailed descriptions of all package functions, intertwined with the methods section of the [original paper][5], and should give a good overview of what is available. \n\nIn this tutorial we consider the situation where you have a single gene of interest and want to compute genetic association statistics for a set of variants of interest (for instance when doing a GWAS analysis for that gene). The approach from the [association analysis tutorial](association.qmd) cannot be followed in this case, because the exported [`findr`](https://tmichoel.github.io/Findr.jl/dev/testLLR/) function assumes that many target genes (\"B\" genes) are tested against one or more variants and uses the distribution of likelihood ratios across all target genes for [Bayesian inference of posterior probabilities](https://lab.michoel.info/Findr.jl/dev/posteriorprobs/). If only one or a small number of genes are tested, this is no longer possible. Nevertheless it is still possible to compute p-values under the null hypothesis of the [linkage test](https://lab.michoel.info/Findr.jl/dev/realLLR/) in this situation.\n\n## Set up the environment\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nusing DrWatson\nquickactivate(@__DIR__)\n\nusing DataFrames\nusing Arrow\nusing StatsPlots\nusing LaTeXStrings\nusing Distributions\n\nusing Findr\n```\n:::\n\n\n## Load data\n\nYou should by now be familiar with the GEUVADIS data used in the *First steps* tutorials. Here we need the following files:\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\ndt = DataFrame(Arrow.Table(datadir(\"exp_pro\",\"findr-data-geuvadis\", \"dt.arrow\")));\ndg = DataFrame(Arrow.Table(datadir(\"exp_pro\",\"findr-data-geuvadis\", \"dgt.arrow\")));\n```\n:::\n\n\nSet the gene of interest:\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\ngene = names(dt)[10]\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n\"ENSG00000125124.6\"\n```\n:::\n:::\n\n\n## Run the analysis\n\n### Convert the data\n\nInternally, all [Findr.jl][1] functions use matrix-based inputs and [supernormalized data](https://tmichoel.github.io/Findr.jl/dev/inference/). The easiest way to convert our data is to run `supernormalize` on the initial data:\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\nYg = vec(Findr.supernormalize(select(dt,gene)));\n```\n:::\n\n\nFor the genotype data, no conversion is needed:\n\n::: {.cell execution_count=5}\n``` {.julia .cell-code}\nG = Matrix(dg);\n```\n:::\n\n\nWe will also need the number of samples:\n\n::: {.cell execution_count=6}\n``` {.julia .cell-code}\nns = length(Yg);\n```\n:::\n\n\n### Compute null p-values\n\nThroughout the package, the [likelihood ratio tests](https://tmichoel.github.io/Findr.jl/dev/realLLR/) are labelled by the following [symbols](https://docs.julialang.org/en/v1/manual/metaprogramming/#Symbols)\n\n- Test 2 (**Linkage test**): `:link`\n- Test 3 (**Mediation test**): `:med`\n- Test 4 (**Relevance test**): `:relev`\n- Test 5 (**Pleiotropy test**): `:pleio`\n\nFor genetic association testing, we only need the **linkage** test.\n\nSince [all log-likelihood ratios are computed from the same summary statistics](https://tmichoel.github.io/Findr.jl/dev/realLLR/#Implementation), a single function computes them all. To compute the log-likelihood ratios for a specific A-gene (here: hsa-miR-200b-3p with column vector of expression data `Ym`) with a causal instrument (best eQTL) with genotype vector `E`, run:\n\n::: {.cell execution_count=7}\n``` {.julia .cell-code}\nllr2 = zeros(size(G,2))\npval = zeros(size(G,2))\nfor i in axes(G,2)\n  ng = length(unique(G[:,i]))\n  llr2[i] = Findr.realLLR_col(Yg, G[:,i])[1]\n  pval[i] = Findr.nullpval(llr2[i] , ns, ng, :link);\nend\n```\n:::\n\n\nPut the results in a DataFrame together with the SNP IDs, and sort by ascending p-value:\n\n::: {.cell execution_count=8}\n``` {.julia .cell-code}\ndp = DataFrame(:SNP => names(dg), :pvalue => pval)\nsort!(dp, :pvalue)\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<div><div style = \"float: left;\"><span>3172Ã—2 DataFrame</span></div><div style = \"float: right;\"><span style = \"font-style: italic;\">3147 rows omitted</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">SNP</th><th style = \"text-align: left;\">pvalue</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">rs9940094</td><td style = \"text-align: right;\">6.2972e-24</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">rs11283195</td><td style = \"text-align: right;\">0.000471103</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">rs879497</td><td style = \"text-align: right;\">0.000744385</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">rs4292287</td><td style = \"text-align: right;\">0.000918026</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">rs4085083</td><td style = \"text-align: right;\">0.00150058</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">rs229484</td><td style = \"text-align: right;\">0.00169764</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">rs2905214</td><td style = \"text-align: right;\">0.00197272</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">rs3794140</td><td style = \"text-align: right;\">0.00199086</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">rs112070238</td><td style = \"text-align: right;\">0.00209161</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">rs3828570</td><td style = \"text-align: right;\">0.00226225</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">rs34721481</td><td style = \"text-align: right;\">0.00231592</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">rs199607077</td><td style = \"text-align: right;\">0.0025415</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">rs1534973</td><td style = \"text-align: right;\">0.00295218</td></tr><tr><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3161</td><td style = \"text-align: left;\">rs16981522</td><td style = \"text-align: right;\">0.995147</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3162</td><td style = \"text-align: left;\">rs10807157</td><td style = \"text-align: right;\">0.996345</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3163</td><td style = \"text-align: left;\">rs6687474</td><td style = \"text-align: right;\">0.996606</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3164</td><td style = \"text-align: left;\">rs11666334</td><td style = \"text-align: right;\">0.99727</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3165</td><td style = \"text-align: left;\">rs3735701</td><td style = \"text-align: right;\">0.997707</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3166</td><td style = \"text-align: left;\">rs3735701_1</td><td style = \"text-align: right;\">0.997707</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3167</td><td style = \"text-align: left;\">rs2184161</td><td style = \"text-align: right;\">0.997788</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3168</td><td style = \"text-align: left;\">rs68050381</td><td style = \"text-align: right;\">0.997995</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3169</td><td style = \"text-align: left;\">rs61876250</td><td style = \"text-align: right;\">0.998395</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3170</td><td style = \"text-align: left;\">rs75206071</td><td style = \"text-align: right;\">0.998975</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3171</td><td style = \"text-align: left;\">rs3747816</td><td style = \"text-align: right;\">0.999285</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3172</td><td style = \"text-align: left;\">rs4807542</td><td style = \"text-align: right;\">0.999328</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n[1]: https://github.com/tmichoel/Findr.jl\n[2]: https://github.com/lingfeiwang/findr-data-geuvadis\n[3]: https://doi.org/10.1038/nature12531\n[4]: https://dataframes.juliadata.org/stable/\n[5]: https://doi.org/10.1371/journal.pcbi.1005703\n[6]: https://tmichoel.github.io/Findr.jl/dev/\n\n",
    "supporting": [
      "internal-functions-2_files\\figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}